#!/usr/bin/env python

# CpG Islands main

from __future__ import print_function
import sys
import argparse
from cpg_islands import metadata, CpGIslandFinder
from cpg_islands.header import header

def main(argv=None):
    if argv is None:
        argv = sys.argv

    author_strings = []                                                                                                                                                                                    
    for name, email in zip(metadata.authors, metadata.emails):
        author_strings.append('Author: {0} <{1}>'.format(name, email))

    epilog = '''
{title} {version}

{authors}
URL: <{url}>
'''.format(
        title=metadata.nice_title,
        version=metadata.version,
        authors='\n'.join(author_strings),
        url=metadata.url
    )
    
    arg_parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description=metadata.description,
        epilog=epilog
        )
    arg_parser.add_argument(
        'learning_fasta',
        metavar='LEARNING_FASTA',
        type=argparse.FileType('r'),
        help='FASTA format file from which to learn.'
        )

    args = arg_parser.parse_args(args=argv[1:])
    
    finder = CpGIslandFinder()

    print(header('Initial model'))
    print(finder, end='\n\n')

    print('Learning from a sequence...', end='\n\n')
    finder.learn('acatttgcttctgacacaactgtgttcactagcaacctcaaacagacaccatggtgcatctgactcctgaggagaagtctgccgttactgccctgtggggcaaggtgaacgtggatgaagttggtggtgaggccctgggcaggctgctggtggtctacccttggacccagaggttctttgagtcctttggggatctgtccactcctgatgctgttatgggcaaccctaaggtgaaggctcatggcaagaaagtgctcggtgcctttagtgatggcctggctcacctggacaacctcaagggcacctttgccacactgagtgagctgcactgtgacaagctgcacgtggatcctgagaacttcaggctcctgggcaacgtgctggtctgtgtgctggcccatcactttggcaaagaattcaccccaccagtgcaggctgcctatcagaaagtggtggctggtgtggctaatgccctggcccacaagtatcactaagctcgctttcttgctgtccaatttctattaaaggttcctttgttccctaagtccaactactaaactgggggatattatgaagggccttgagcatctggattctgcctaataaaaaacatttattttcattgc')

    print(header('Initial model'))
    print(finder, end='\n\n')


if __name__ == '__main__':
    sys.exit(main())
